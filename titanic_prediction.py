# -*- coding: utf-8 -*-
"""titanic prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v-RdeSPjkbBqvKuReqNOv03HEQJRcuKi
"""

# Step 1: Upload Titanic CSV File
from google.colab import files
uploaded = files.upload()

# Step 2: Import Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Step 3: Load the Dataset
filename = list(uploaded.keys())[0]
df = pd.read_csv(filename)

# Step 4: Explore the Dataset
print(df.head())
print("\nMissing Values:\n", df.isnull().sum())

# Step 5: Data Cleaning
# Fill missing Age with median
df['Age'].fillna(df['Age'].median(), inplace=True)
# Fill missing Embarked with mode
df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)
# Drop Cabin and Name for simplicity
df.drop(['Cabin', 'Name', 'Ticket'], axis=1, inplace=True)

# Step 6: Convert Categorical to Numeric
le = LabelEncoder()
df['Sex'] = le.fit_transform(df['Sex'])         # male = 1, female = 0
df['Embarked'] = le.fit_transform(df['Embarked'])

# Step 7: Split Data
X = df.drop(['Survived', 'PassengerId'], axis=1)
y = df['Survived']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 8: Train Model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 9: Predict and Evaluate
y_pred = model.predict(X_test)
print("\nAccuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))

# Optional: Feature Importance Plot
feat_importance = pd.Series(model.feature_importances_, index=X.columns)
feat_importance.nlargest(10).plot(kind='barh')
plt.title("Feature Importance")
plt.show()